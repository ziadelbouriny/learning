name: Build with XC16 and Run Cppcheck

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: XC16 Build and Static Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Compile all .c files inside mcc_generated_files with includes
        run: |
          docker run --rm \
            -v "${GITHUB_WORKSPACE}:/workspace" \
            -w /workspace \
            ziadelbouriny/xc16:v2.10 \
            bash -eux -c '
              mkdir -p build

              # Automatically collect all header dirs
              INCLUDE_DIRS=$(find mcc_generated_files -type f -name "*.h" -exec dirname {} \; | sort -u)
              INCLUDES=""
              for inc in $INCLUDE_DIRS; do
                INCLUDES="$INCLUDES -I$inc"
              done
              INCLUDES="$INCLUDES -I. -Imcc_generated_files"

              # Compile only MCC-generated C sources
              SRC_FILES=$(find mcc_generated_files -type f -name "*.c")
              for src in $SRC_FILES; do
                obj="build/$(basename "$src" .c).o"
                echo "Compiling $src --> $obj"
                xc16-gcc $INCLUDES "$src" -mcpu=33EP256MC506 -c -o "$obj"
              done

              # Link into project.elf
              echo "Linking..."
              OBJS=$(find build -type f -name "*.o")
              xc16-gcc $OBJS -mcpu=33EP256MC506 -o build/project.elf
            '

      - name: Run cppcheck on C code
        run: |
          docker run --rm \
            -v "${GITHUB_WORKSPACE}:/workspace" \
            -w /workspace \
            ziadelbouriny/xc16:v2.10 \
            bash -eux -c '
              cppcheck --enable=all --inconclusive --quiet --suppress=missingInclude .
            '

      - name: Upload ELF artifact
        uses: actions/upload-artifact@v4
        with:
          name: compiled-elf
          path: build/project.elf






